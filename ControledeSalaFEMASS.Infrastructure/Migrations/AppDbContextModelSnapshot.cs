// <auto-generated />
using System;
using ControledeSalaFEMASS.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControledeSalaFEMASS.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControledeSalaFEMASS.Domain.Entities.AlocacaoSala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiaSemana")
                        .HasColumnType("int");

                    b.Property<int>("SalaId")
                        .HasColumnType("int");

                    b.Property<int>("Tempo")
                        .HasColumnType("int");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalaId");

                    b.HasIndex("TurmaId");

                    b.ToTable("AlocacoesSala");
                });

            modelBuilder.Entity("ControledeSalaFEMASS.Domain.Entities.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("NecessitaArCondicionado")
                        .HasColumnType("bit");

                    b.Property<bool>("NecessitaLaboratorio")
                        .HasColumnType("bit");

                    b.Property<bool>("NecessitaLoucaDigital")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("ControledeSalaFEMASS.Domain.Entities.Indisponibilidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiaSemana")
                        .HasColumnType("int");

                    b.Property<int>("SalaId")
                        .HasColumnType("int");

                    b.Property<int>("Tempo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalaId");

                    b.ToTable("Indisponibilidades");
                });

            modelBuilder.Entity("ControledeSalaFEMASS.Domain.Entities.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bloco")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("int");

                    b.Property<long>("Numero")
                        .HasColumnType("bigint");

                    b.Property<bool>("PossuiArCondicionado")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiLaboratorio")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiLoucaDigital")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("ControledeSalaFEMASS.Domain.Entities.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CodigoHorario")
                        .HasColumnType("int");

                    b.Property<string>("CodigoTurma")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<string>("Professor")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("QuantidadeAlunos")
                        .HasColumnType("int");

                    b.Property<int?>("TotalQuantidadeAlunosAgrupados")
                        .HasColumnType("int");

                    b.Property<int?>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("ControledeSalaFEMASS.Domain.Entities.AlocacaoSala", b =>
                {
                    b.HasOne("ControledeSalaFEMASS.Domain.Entities.Sala", "Sala")
                        .WithMany("Alocacoes")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControledeSalaFEMASS.Domain.Entities.Turma", "Turma")
                        .WithMany("Alocacoes")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sala");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("ControledeSalaFEMASS.Domain.Entities.Indisponibilidade", b =>
                {
                    b.HasOne("ControledeSalaFEMASS.Domain.Entities.Sala", "Sala")
                        .WithMany("Indisponibilidades")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("ControledeSalaFEMASS.Domain.Entities.Turma", b =>
                {
                    b.HasOne("ControledeSalaFEMASS.Domain.Entities.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControledeSalaFEMASS.Domain.Entities.Turma", null)
                        .WithMany("TurmasAgrupadas")
                        .HasForeignKey("TurmaId");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("ControledeSalaFEMASS.Domain.Entities.Sala", b =>
                {
                    b.Navigation("Alocacoes");

                    b.Navigation("Indisponibilidades");
                });

            modelBuilder.Entity("ControledeSalaFEMASS.Domain.Entities.Turma", b =>
                {
                    b.Navigation("Alocacoes");

                    b.Navigation("TurmasAgrupadas");
                });
#pragma warning restore 612, 618
        }
    }
}
